"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArrayLimit(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,a,i,s=[],l=!0,c=!1;try{if(a=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=a.call(r)).done)&&(s.push(n.value),s.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(c)throw o}}return s}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var l,i={},e=Object.prototype,c=e.hasOwnProperty,u=Object.defineProperty||function(e,t,r){e[t]=r.value},t="function"==typeof Symbol?Symbol:{},n=t.iterator||"@@iterator",r=t.asyncIterator||"@@asyncIterator",o=t.toStringTag||"@@toStringTag";function a(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{a({},"")}catch(l){a=function(e,t,r){return e[t]=r}}function s(e,t,r,n){var o,a,i,s,t=t&&t.prototype instanceof m?t:m,t=Object.create(t.prototype),n=new D(n||[]);return u(t,"_invoke",{value:(o=e,a=r,i=n,s=p,function(e,t){if(s===g)throw new Error("Generator is already running");if(s===h){if("throw"===e)throw t;return{value:l,done:!0}}for(i.method=e,i.arg=t;;){var r=i.delegate;if(r){r=function e(t,r){var n=r.method,o=t.iterator[n];if(o===l)return r.delegate=null,"throw"===n&&t.iterator.return&&(r.method="return",r.arg=l,e(t,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),y;n=d(o,t.iterator,r.arg);if("throw"===n.type)return r.method="throw",r.arg=n.arg,r.delegate=null,y;o=n.arg;return o?o.done?(r[t.resultName]=o.value,r.next=t.nextLoc,"return"!==r.method&&(r.method="next",r.arg=l),r.delegate=null,y):o:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,y)}(r,i);if(r){if(r===y)continue;return r}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(s===p)throw s=h,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);s=g;r=d(o,a,i);if("normal"===r.type){if(s=i.done?h:f,r.arg===y)continue;return{value:r.arg,done:i.done}}"throw"===r.type&&(s=h,i.method="throw",i.arg=r.arg)}})}),t}function d(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}i.wrap=s;var p="suspendedStart",f="suspendedYield",g="executing",h="completed",y={};function m(){}function b(){}function v(){}var t={},w=(a(t,n,function(){return this}),Object.getPrototypeOf),w=w&&w(w(A([]))),_=(w&&w!==e&&c.call(w,n)&&(t=w),v.prototype=m.prototype=Object.create(t));function L(e){["next","throw","return"].forEach(function(t){a(e,t,function(e){return this._invoke(t,e)})})}function S(i,s){var t;u(this,"_invoke",{value:function(r,n){function e(){return new s(function(e,t){!function t(e,r,n,o){var a,e=d(i[e],i,r);if("throw"!==e.type)return(r=(a=e.arg).value)&&"object"==_typeof(r)&&c.call(r,"__await")?s.resolve(r.__await).then(function(e){t("next",e,n,o)},function(e){t("throw",e,n,o)}):s.resolve(r).then(function(e){a.value=e,n(a)},function(e){return t("throw",e,n,o)});o(e.arg)}(r,n,e,t)})}return t=t?t.then(e,e):e()}})}function x(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function k(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function D(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(x,this),this.reset(!0)}function A(t){if(t||""===t){var r,e=t[n];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length))return r=-1,(e=function e(){for(;++r<t.length;)if(c.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=l,e.done=!0,e}).next=e}throw new TypeError(_typeof(t)+" is not iterable")}return u(_,"constructor",{value:b.prototype=v,configurable:!0}),u(v,"constructor",{value:b,configurable:!0}),b.displayName=a(v,o,"GeneratorFunction"),i.isGeneratorFunction=function(e){e="function"==typeof e&&e.constructor;return!!e&&(e===b||"GeneratorFunction"===(e.displayName||e.name))},i.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,v):(e.__proto__=v,a(e,o,"GeneratorFunction")),e.prototype=Object.create(_),e},i.awrap=function(e){return{__await:e}},L(S.prototype),a(S.prototype,r,function(){return this}),i.AsyncIterator=S,i.async=function(e,t,r,n,o){void 0===o&&(o=Promise);var a=new S(s(e,t,r,n),o);return i.isGeneratorFunction(t)?a:a.next().then(function(e){return e.done?e.value:a.next()})},L(_),a(_,o,"Generator"),a(_,n,function(){return this}),a(_,"toString",function(){return"[object Generator]"}),i.keys=function(e){var t,r=Object(e),n=[];for(t in r)n.push(t);return n.reverse(),function e(){for(;n.length;){var t=n.pop();if(t in r)return e.value=t,e.done=!1,e}return e.done=!0,e}},i.values=A,D.prototype={constructor:D,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=l,this.done=!1,this.delegate=null,this.method="next",this.arg=l,this.tryEntries.forEach(k),!e)for(var t in this)"t"===t.charAt(0)&&c.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=l)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(r){if(this.done)throw r;var n=this;function e(e,t){return a.type="throw",a.arg=r,n.next=e,t&&(n.method="next",n.arg=l),!!t}for(var t=this.tryEntries.length-1;0<=t;--t){var o=this.tryEntries[t],a=o.completion;if("root"===o.tryLoc)return e("end");if(o.tryLoc<=this.prev){var i=c.call(o,"catchLoc"),s=c.call(o,"finallyLoc");if(i&&s){if(this.prev<o.catchLoc)return e(o.catchLoc,!0);if(this.prev<o.finallyLoc)return e(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return e(o.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return e(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;0<=r;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&c.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc?null:o)?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,y):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),y},finish:function(e){for(var t=this.tryEntries.length-1;0<=t;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),k(r),y}},catch:function(e){for(var t=this.tryEntries.length-1;0<=t;--t){var r,n,o=this.tryEntries[t];if(o.tryLoc===e)return"throw"===(r=o.completion).type&&(n=r.arg,k(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:A(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=l),y}},i}function asyncGeneratorStep(e,t,r,n,o,a,i){try{var s=e[a](i),l=s.value}catch(e){return void r(e)}s.done?t(l):Promise.resolve(l).then(n,o)}function _asyncToGenerator(s){return function(){var e=this,i=arguments;return new Promise(function(t,r){var n=s.apply(e,i);function o(e){asyncGeneratorStep(n,t,r,o,a,"next",e)}function a(e){asyncGeneratorStep(n,t,r,o,a,"throw",e)}o(void 0)})}}function _createForOfIteratorHelper(e,t){var r,n,o,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return n=!(r=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return r=e.done,e},e:function(e){n=!0,o=e},f:function(){try{r||null==i.return||i.return()}finally{if(n)throw o}}};if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var body,formLogin,alertModal,inputs,rootCSS,app,burgerLines,burgerLine2,sidebar,navbar,sidebarSpans,sidebarItems,prev,formEditItems,btnSendForm,dialog,boxesForm,dialogBoxBtn,dialogBoxImg,wrapperDialog,dialogBtnClose,schoolBell,hideCheckboxes,parafgraphAdvertisement,parentDiv,idImg=0,idRow=0,api={log:"https://api.pqwouriqwuo.ct8.pl/api/Account/Authorize",refreshToken:"https://api.pqwouriqwuo.ct8.pl/api/Account/RefreshToken",postDatabase:"https://api.pqwouriqwuo.ct8.pl/api"},settings={maxLengthEvent:30,maxLengthTextarea:340},newData={naglowek:{logo:"logo-svhool.png",event:""},klasy:{hide:!1,files:""},slider:{hide:!1,slider:[]},ogloszenia:{hide:!1,text:"",poster:""},zastepstwa:{hide:!1,tablica:[]}},main=function(){prepareDOMElements(),prepareDOMEvents(),window.addEventListener("load",checkLoading)},prepareDOMElements=function(){body=document.querySelector("body"),rootCSS=document.documentElement,formLogin=body.querySelector(".login__form"),inputs=_toConsumableArray(formLogin.querySelectorAll("input")),app=body.querySelector(".app"),alertModal=body.querySelector(".modal__alert"),burgerLines=[body.querySelector(".line1"),body.querySelector(".line3")],burgerLine2=body.querySelector(".line2"),sidebar=body.querySelector(".sidebar"),navbar=body.querySelector(".navbar"),sidebarSpans=_toConsumableArray(body.querySelectorAll(".sidebar__text")),sidebarItems=_toConsumableArray(body.querySelectorAll(".sidebar__item")),prev=_toConsumableArray(body.querySelectorAll(".prev")),formEditItems=_toConsumableArray(body.querySelectorAll(".edit__item")),btnSendForm=body.querySelector(".edit__btn--send"),wrapperDialog=body.querySelector(".edit__wrapper"),dialog=body.querySelector(".edit__dialog"),dialogBoxBtn=body.querySelector(".edit__box-btn"),dialogBoxImg=body.querySelector(".edit__box-img"),dialogBtnClose=body.querySelector(".edit__btn-close"),boxesForm=_toConsumableArray(body.querySelectorAll(".edit__box-from")),schoolBell=body.querySelector(".school__bell"),hideCheckboxes=body.querySelectorAll(".edit__checkmark"),parafgraphAdvertisement=document.querySelector(".main__text")},prepareDOMEvents=function(){onStartWebsite(),burgerLine2.closest("svg").addEventListener("click",toogleNav),sidebarItems.forEach(function(e,t){return e.addEventListener("click",function(e){return changeCategory(e,t)})}),boxesForm.forEach(function(e,t){return e.addEventListener("click",function(e){return deletePrevientDefault(e,t)})}),dialogBoxImg.addEventListener("click",function(e){return selectFormImg(e)}),hideCheckboxes.forEach(function(e,t){return e.addEventListener("click",function(e){return hideElementOnView(e,t)})})},currentDate=function(){return new Date},onStartWebsite=function(){setThemeLogin(),992<window.innerWidth&&openNav()},setThemeLogin=function(){var e=currentDate().getMonth(),t=currentDate().getDate(),t=[0<=e&&e<=2&&t<21,3<=e&&e<=5&&t<22,6<=e&&e<=8&&t<23,9<=e&&e<=11].findIndex(function(e){return!0===e});rootCSS.style.setProperty("--login-color",["210","122","300","14"][t]),body.querySelector(".login").style.backgroundImage='url("dist/img/bacground-login'.concat(t,'.png")')},checkLoading=function(){var e,t=_createForOfIteratorHelper(body.querySelectorAll("img"));try{for(t.s();!(e=t.n()).done;)if(!e.value.complete)return}catch(e){t.e(e)}finally{t.f()}body.querySelector(".loader").classList.add("none")},toogleNav=function(){window.innerWidth<992&&body.classList.toggle("hidden"),openNav()},openNav=function(){burgerLines.forEach(function(e){return e.classList.toggle("draw-line")}),burgerLine2.classList.toggle("submitted-line"),[sidebar].concat(_toConsumableArray(sidebarSpans),[app,navbar]).forEach(function(e){return e.classList.toggle("active")})},checkLogin=function(e){if(e.preventDefault(),!navigator.onLine)return showAlert("Brak połączenia z internetem!",!1);var t,r=inputs.map(function(e){return e.value});""===r[2]&&(t="",r[0].length||r[1].length?!r[0].length&&r[1].length?t="Wprowadź login!":r[0].length&&!r[1].length&&(t="Wprowadź hasło!"):t="Wprowadź dane!",""!==t?showAlert(t,!1):sendLogin(e.target,r))},openApp=function(e){var t=e.message,e=e.ok;showAlert("Pomyślne zalogowano",e),document.cookie="access_token=".concat(t.access_token,"; expires=").concat(t.expirens_time,"; path=/"),setTimeout(refreshToken(t.refresh_token),t.expirens_time),document.querySelector(".login").classList.add("none"),app.classList.remove("none")},refreshToken=function(){var t=_asyncToGenerator(_regeneratorRuntime().mark(function e(t){return _regeneratorRuntime().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(api.refreshToken,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refresh_token:t})});case 2:e.sent;case 3:case"end":return e.stop()}},e)}));return function(e){return t.apply(this,arguments)}}(),sendLogin=function(){var r=_asyncToGenerator(_regeneratorRuntime().mark(function e(t,r){var n,o;return _regeneratorRuntime().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return o=_slicedToArray(r,2),n=o[0],o=o[1],t.disabled=!0,t.classList.add("loading"),e.prev=3,e.next=6,fetch(api.log,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({login:n,password:o})});case 6:return n=e.sent,e.next=9,n.json();case 9:(o=e.sent).ok?openApp(o):showAlert(o.message,!1),e.next=16;break;case 13:e.prev=13,e.t0=e.catch(3),showAlert(e.t0,!1);case 16:return e.prev=16,t.disabled=!1,t.classList.remove("loading"),e.finish(16);case 20:case"end":return e.stop()}},e,null,[[3,13,16,20]])}));return function(e,t){return r.apply(this,arguments)}}(),showAlert=function(e,t){alertModal.classList.add("scroll-down"),alertModal.textContent=e,alertModal.style.backgroundColor=t?"green":"red",setTimeout(function(){return alertModal.classList.remove("scroll-down")},1400)},showPassword=function(e){document.querySelector(".login__pass").textContent=e?"🙈":"👀",inputs[1].type=e?"text":"password"},changeCategory=function(e,r){body.querySelector(".edit__welcome").classList.add("none"),closeImgDialog(!1),sidebarItems.forEach(function(e,t){return e.classList.toggle("active",t===r)}),prev.forEach(function(e,t){return e.classList.toggle("none",t!==r)}),formEditItems.forEach(function(e,t){return e.classList.toggle("none",t!==r)}),prev.forEach(function(e,t){return e.classList.toggle("transform-down",t===r)}),formEditItems.forEach(function(e,t){return e.classList.toggle("transform-down",t===r)}),btnSendForm.classList.remove("none"),(5===r?openDialog:closeDialog)()},openDialog=function(){btnSendForm.classList.add("none"),dialog.classList.remove("none"),dialog.classList.add("transform-down"),dialogBtnClose.classList.add("none")},closeDialog=function(){dialog.classList.add("none"),dialog.classList.remove("transform-down"),dialogBtnClose.classList.remove("none")},deletePrevientDefault=function(e,t){3!==t&&e.preventDefault()},showImgDialog=function(e){parentDiv=e.target.closest("div"),wrapperDialog.classList.add("wrapper-form"),dialog.classList.add("show-dialog"),dialogBoxBtn.classList.add("none"),dialogBoxImg.style.height="78vh",dialog.classList.add("active")},closeImgDialog=function(e){e&&e.preventDefault(),wrapperDialog.classList.remove("wrapper-form"),dialog.classList.remove("show-dialog"),dialogBoxBtn.classList.remove("none"),dialogBoxImg.style.maxHeight="",dialog.classList.remove("active")},selectFormImg=function(e){var t;e.target!==dialogBoxImg&&dialog.classList.contains("active")&&(_toConsumableArray(parentDiv.querySelectorAll("button")).forEach(function(e){return e.classList.toggle("none")}),(t=document.createElement("span")).textContent=e.target.src.split("/").pop(),parentDiv.appendChild(t),updateCurrentPhotos(e.target.src.split("/").pop(),parentDiv),closeImgDialog(!1))},updateCurrentPhotos=function(e,t){var r=t.parentElement.closest("div").className,n=body.querySelector(".".concat(r));t.classList.contains("logo-school")?(body.querySelector(".school__logo").src="dist/img/".concat(e),newData.naglowek.logo=e):t.classList.contains("gallery-school")?(n.querySelector("img").src="dist/img/".concat(e),newData.slider.slider.push({imgSrc:e,className:r})):t.classList.contains("news-poster")&&(parafgraphAdvertisement.style.backgroundImage="url('dist/img/".concat(e,"')"),parafgraphAdvertisement.style.color="transparent",newData.ogloszenia.poster=e)},closeLogoImg=function(e){body.querySelector(".school__logo").src="dist/img/logo-svhool.png",_toConsumableArray(e.target.closest("div").querySelectorAll("button")).forEach(function(e){return e.classList.toggle("none")}),e.target.closest("div").querySelector("span").remove(),newData.naglowek.logo="logo-svhool.png"},addNewEvent=function(e){e=e.target.closest("div").querySelector("input").value;if(0===e.length)return showAlert("Nic nie wprowadziłeś",!1);schoolBell.textContent=e.slice(0,settings.maxLengthEvent),schoolBell.style.backgroundColor="green",newData.naglowek.event=e},closeNewEvent=function(e){e.target.closest("div").querySelector("input").value="",schoolBell.textContent="Do końca ";var e=document.createElement("span"),t=document.createElement("span");e.className="school__subject",t.className="school__timer",e.textContent="lekcji 9",t.textContent="99min",schoolBell.appendChild(e),schoolBell.appendChild(document.createTextNode(" - ")),schoolBell.appendChild(t),schoolBell.style.backgroundColor="",newData.naglowek.event=""},hideElementOnView=function(e,t){switch(e.target.classList.toggle("active"),prev[t+1].classList.toggle("active"),t+1){case 1:return newData.klasy.hide=!newData.klasy.hide;case 2:return newData.slider.hide=!newData.slider.hide;case 3:return newData.ogloszenia.hide=!newData.ogloszenia.hide;case 4:return newData.zastepstwa.hide=!newData.zastepstwa.hide}},closeItemGallery=function(e){var t=e.target.closest("div").parentElement.closest("div").className;body.querySelectorAll(".".concat(t)).forEach(function(e){return e.remove()}),newData.slider.slider=newData.slider.slider.filter(function(e){return e.className!==t})},updateCurrentTextarea=function(e){e=e.target.closest("div").querySelector("textarea").value;if(""===e)return showAlert("Nic nie wprowadziłeś",!1);e=e.length<settings.maxLengthTextarea?e:e.slice(0,settings.maxLengthTextarea)+"...";document.querySelector(".main__text").textContent=e,newData.ogloszenia.text=e},deleteTeaxarea=function(e){e.target.closest("div").querySelector("textarea").value="",parafgraphAdvertisement.textContent="",newData.ogloszenia.text=""},deleteImgPoster=function(e){parafgraphAdvertisement.style.backgroundImage="",parafgraphAdvertisement.style.color="",_toConsumableArray(e.target.closest("div").querySelectorAll("button")).forEach(function(e){return e.classList.toggle("none")}),e.target.closest("div").querySelector("span").remove(),newData.ogloszenia.poster=""},editSubsitRow=function(e){var t=e.target.closest("div").className.split(" ")[1],r=_toConsumableArray(body.querySelector(".".concat(t)).querySelectorAll("td")),t=_toConsumableArray(e.target.closest("div").querySelector("tr").querySelectorAll("input"));if(t.some(function(e){return""===e.value}))return showAlert("Uzupełnij wszystkie pola",!1);t.forEach(function(e,t){r[t].textContent=e.value});e=t.map(function(e){return e.value});newData.zastepstwa.tablica.push(e)},deleteSubsitRow=function(e){var t=e.target.closest("div").className.split(" ")[1];body.querySelectorAll(".".concat(t)).forEach(function(e){return e.remove()}),newData.zastepstwa.tablica=newData.zastepstwa.tablica.filter(function(e){return e.className!==t})},addNewLiImg=function(e){e.preventDefault(),idImg++;e=document.createElement("div"),e.className="li-".concat(idImg),e.innerHTML='\n            <span class="edit__label">Zdjęcie</span>\n            <div class="edit__box-image gallery-school">\n                <button class="edit__btn-img check" onclick="showImgDialog(event)">Wybierz zdjęcie</button>\n                <button class="edit__btn-form edit__btn-form--delete none" onclick="closeItemGallery(event)"></button>\n            </div>',body.querySelector(".list-img").appendChild(e),e=document.createElement("li");e.className="main__card li-".concat(idImg),e.innerHTML='\n    <img src="dist/img/addImg.png" alt="Picture" class="main__img">',body.querySelector(".main__carousel").appendChild(e)},addNewDivRow=function(e){e.preventDefault(),idRow++;e=document.createElement("div"),e.className="edit__box-from row-".concat(idRow),e.innerHTML='\n        <span class="edit__label">Kolumna</span>\n        <div class="edit__box--table">\n            <table>\n                <tbody><tr class="subsit__row">\n                    <td class="subsit__cell"><input type="text" name="ok" class="edit__input short"></td>\n                    <td class="subsit__cell"><input type="text" name="ok" class="edit__input long"></td>\n                    <td class="subsit__cell"><input type="text" name="ok" class="edit__input mid"></td>\n                    <td class="subsit__cell"><input type="text" name="ok" class="edit__input long"></td>\n                    <td class="subsit__cell"><input type="text" name="ok" class="edit__input mid"></td>\n                    <td class="subsit__cell"><input type="text" name="ok" class="edit__input long"></td>\n                    <td class="subsit__cell"><input type="text" name="ok" class="edit__input long"></td>\n                </tr>\n            </tbody></table>\n        </div>\n        <button class="edit__btn-form edit__btn-form--check write" onclick="editSubsitRow(event)"></button>\n        <button class="edit__btn-form edit__btn-form--delete write" onclick="deleteSubsitRow(event)"></button>',body.querySelector(".list-li").appendChild(e),e=document.createElement("tr");e.className="subsit__row row-".concat(idRow),e.innerHTML='\n        <td class="subsit__cell">---</td>\n        <td class="subsit__cell">---</td>\n        <td class="subsit__cell">---</td>\n        <td class="subsit__cell">---</td>\n        <td class="subsit__cell">---</td>\n        <td class="subsit__cell">---</td>\n        <td class="subsit__cell">---</td>',body.querySelector(".subsit__tbody").appendChild(e)},sendEditDateToServer=function(e){e.preventDefault();var t=sidebarItems.find(function(e){return e.classList.contains("active")}).textContent.trim(),t=createTaskData(t);sendDateToServer(t,e.target,t.method)},createTaskData=function(e){var t=newData.slider.slider.map(function(e){return e.imgSrc});switch(e){case"Nagłówek":return{name:"naglowek",logo:newData.naglowek.logo,event:newData.naglowek.event,method:"Settings/Edit"};case"Klasy":return{name:"klasy",hide:newData.klasy.hide,files:newData.naglowek.event};case"Slider":return{name:"slider",hide:newData.slider.hide,images:t};case"Ogłoszenia":return{name:"ogloszenia",hide:newData.ogloszenia.hide,text:newData.ogloszenia.text,poster:newData.ogloszenia.poster,method:"Announcements/Create"};case"Zastepstwa":return{name:"zastepstwa",hide:newData.zastepstwa.hide,tablica:newData.zastepstwa.tablica};default:return null}},sendDateToServer=function(){var n=_asyncToGenerator(_regeneratorRuntime().mark(function e(t,r,n){return _regeneratorRuntime().wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r.disabled=!0,r.classList.add("loading"),t.access_token=getCookie(),null===t)return e.abrupt("return");e.next=5;break;case 5:return console.log(t),e.prev=6,e.next=9,fetch(api.postDatabase+"/"+n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});case 9:if(e.sent.ok){e.next=12;break}throw new Error("Nie udało się wysłać danych na serwer");case 12:e.next=17;break;case 14:e.prev=14,e.t0=e.catch(6),console.error("Wystąpił błąd podczas wysyłania danych:",e.t0.message);case 17:return e.prev=17,r.disabled=!1,r.classList.remove("loading"),e.finish(17);case 21:case"end":return e.stop()}},e,null,[[6,14,17,21]])}));return function(e,t,r){return n.apply(this,arguments)}}();document.addEventListener("DOMContentLoaded",main);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
